@model Generwell.Modules.ViewModels.TaskDetailsViewModel
@using Microsoft.AspNetCore.Http;

@{
    ViewBag.Title = "Task Page";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<!-- Loading Modal Start here-->
@Html.Partial("_LoadingPopup")
<!-- Modal ends Here -->

<input id="wellId" type="hidden" value="@Context.Session.GetString("WellId")" />
<input id="isFollow" type="hidden" value="@Context.Session.GetString("IsFollow")" />

<div class="container wrapper wrapper-content animated fadeInRight mr-20 ml-20">
    <div class="row">
        <div class="col-lg-12">
            <div class="float-right user-name"><label>Welcome &nbsp;</label>@Context.Session.GetString("UserName")</div>
            <div class="ibox float-e-margins">
                <div class="title ibox-title border-bottom">
                    <h4><img src="~/images/task-details-icon.png" class="pb-5" />&nbsp;Task Details</h4>
                    <label>Well: </label>  @Context.Session.GetString("WellName")
                </div>
               
                <div class="row border-bottom pt-pb-20">
                    <div class="col-md-6 col-lg-6 line">
                        <div id="taskDetailsTableDivId" class="ibox-content">
                            <label>Task Name:</label>
                            @Model.name<br />
                            <label>Activity Date:</label>
                            @if (@Model.activatedDate != null)
                            {
                                DateTime startDate = new DateTime(1970, 1, 1);
                                DateTime date = startDate.AddSeconds(Convert.ToDouble(@Model.activatedDate));
                                @date.ToString("MMM dd, yyyy")
                            }                          
                           <br/>
                            <label>Forecast Date:</label>                          
                            @if (@Model.forecastDate != null)
                            {
                                DateTime startDate = new DateTime(1970, 1, 1);
                                DateTime date = startDate.AddSeconds(Convert.ToDouble(@Model.forecastDate));
                                @date.ToString("MMM dd, yyyy")
                            }  
                            <br/>
                            <label>Due Date:</label>
                            @if (@Model.expectedCompletionDate != null)
                            {
                                DateTime startDate = new DateTime(1970, 1, 1);
                                DateTime date = startDate.AddSeconds(Convert.ToDouble(@Model.expectedCompletionDate));
                                @date.ToString("MMM dd, yyyy")
                            }
                        </div>
                    </div>
                    <div class="col-md-6 col-lg-6 ContactBlock">
                        <div id="taskFieldsDiv">
                            @Html.Partial("_ContactField", Model.contactFields)
                        </div>

                    </div>
                </div>
                <div id="taskFieldsDiv">
                    @Html.Partial("_TaskFields", Model)
                </div>
            </div>
        </div>
    </div>
</div>